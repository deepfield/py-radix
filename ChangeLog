20071218
 - (djm) Implement pickle protocol via __reduce__ and __setstate__, inspired
   by wrapper from Erik Curiel (ecuriel AT kefta.com)
 - (djm) Crank version number to 0.5
 - (djm) Make this compile on Python 2.4, which lacks Py_ssize_t

20071010
- (djm) fix for Windows platforms: WSAStartup was not called, resulting
  in failures inside getaddrinfo. Report from harpreet.sawhney AT gmail.com

20060808
 - (djm) Support for Win32 (AF_INET6 is still broken though)

20060628
 - (djm) Add RPM spec file
 - (djm) Hygene fixes: be more strict with types, use Python memory
   allocators instead of libc malloc/free

20050425
 - (djm) Fix bug that could corrupt some prefixes; reported by 
   siganos AT cs.ucr.edu
 - (djm) Delete semicolons from EOL in test.py
 - (djm) Release py-radix-0.4

20041123
 - (djm) Use RFC3849 IPv6 prefixes in documentation
 - (djm) Some stupid platforms still lack strl*, so avoid their use
 - (djm) Allow mixing of IPv4 and IPv6 prefixes in the same tree by keeping 
   separate trees in the RadixObject for each AF
 - (djm) Release beta version: py-radix-0.3

20041122
 - (djm) Raise a RuntimeWarning and abort iteration if the tree changes while
   we are iterating over it
 - (djm) Add new regress tests: nodes() on an empty tree, iterate on an 
   empty tree, modify tree while iterating, add/delete/check lots of prefixes
 - (djm) order and tidy regress test function names
 - (djm) Don't need to use a callback to do Radix.nodes(), so don't use one
 - (djm) Avoid callback for tree deletes too
 - (djm) GC unusued args to newRadixNodeObject
 - (djm) KNF and GC radix.h
 - (djm) unifdef radix.c
 - (djm) KNF radix.c (more remains)
 - (djm) Kill asserts() in radix.c, more KNF (starting to be readable now)
 - (djm) Implement Radix.prefixes() returning a list of prefix strings
 - (djm) Allow Radix methods to accept separate prefix lengths. E.g. 
    method("xx.xx.xx.xx", yy)
 - (djm) Support keyword arguments for Radix methods. E.g. 
   tree.add(network="127.0.0.1", masklen=32)
 - (djm) scrub off address bits past masklen, E.g. so tree.add("10.0.0.255/24")
   creates an idential object to tree.add("10.0.0.0/24")
 - (djm) Regress tests for bad addresses and insane mask lengths
 - (djm) Support for binary packed addresses in Radix methods and a RadixNode
    member

20041121
 - (djm) Fix a bug: forgot to set the exception type when trying to get 
   RadixNode members that don't exist
 - (djm) Prepare for Radix.method(address, masklen) by extending radix API
 - (djm) Add regression tests (not yet integrated with build)
 - (djm) Always allocate user objects in RadixNode
 - (djm) API change: don't allow creation of arbirtary members in RadixNode.
   Instead, provide a data dict for storage of user-specified state. This 
   avoid all of the introspection breakage of providing our get/setattr 
   functions
 - (djm) Add RadixNode docstring
 - (djm) Add iterator support
 - (djm) Flesh out setup.py and add correct URL
 - (djm) Raise an exception when trying to mix V4 and V6 addresses in a single 
   tree (rather than continuing and returning confusing results). Hopefully 
   this will be fixed in the future
 - (djm) Release alpha version: py-radix-0.2

20041118
 - (djm) Start the changelog
 - (djm) Release alpha version: py-radix-0.1

$Id: ChangeLog,v 1.39 2007/12/18 02:49:01 djm Exp $
